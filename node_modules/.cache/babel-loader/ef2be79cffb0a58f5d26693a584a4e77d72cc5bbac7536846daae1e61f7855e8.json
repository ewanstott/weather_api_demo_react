{"ast":null,"code":"var _jsxFileName = \"/Users/ewstott/Documents/Github_Local/weather_api_demo_react/src/components/Interface.jsx\";\nimport React, { Component } from \"react\";\nimport Button from \"./Button\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Interface extends Component {\n  // state = {}\n  render() {\n    const {\n      weather\n    } = this.props;\n    console.log(this.props);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"Location: \", weather.name]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"Temperature: \", weather.main.temp]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"Feels like: \", weather.main.feels_like]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [weather.weather[0].main, \" \"]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          text: \"Refresh\",\n          className: \"refreshBtn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)\n      }, void 0, false)]\n    }, void 0, true);\n  }\n}\nexport default Interface;\n\n//Map over API URL and spit out HTML\n//Make components\n//Add button that sorts weather\n//HW to include:\n// - Components\n// - Props\n// - State\n// - Life cycles\n// // - Event handling\n// Components: In React, components are modular, reusable building blocks that encapsulate a part of the user interface and its behavior.\n\n// Props: Props (short for properties) are used to pass data from a parent component to a child component in React, allowing communication between them.\n\n// State: State is a mechanism in React components that allows them to manage and maintain their own data, ensuring that the UI reflects the current application state.\n\n// Life Cycles: Component lifecycle methods in React provide hooks at various stages, such as mounting, updating, and unmounting, allowing developers to execute code at specific points in a component's existence.\n\n// Event Handling: In React, event handling involves capturing and responding to user interactions (e.g., clicks, input changes) within the components to trigger specific actions or updates in the application.","map":{"version":3,"names":["React","Component","Button","Fragment","_Fragment","jsxDEV","_jsxDEV","Interface","render","weather","props","console","log","children","name","fileName","_jsxFileName","lineNumber","columnNumber","main","temp","feels_like","text","className"],"sources":["/Users/ewstott/Documents/Github_Local/weather_api_demo_react/src/components/Interface.jsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport Button from \"./Button\";\n\nclass Interface extends Component {\n  // state = {}\n  render() {\n    const { weather } = this.props;\n    console.log(this.props);\n    return (\n      <>\n        <>Location: {weather.name}</>\n        <br />\n        <>Temperature: {weather.main.temp}</>\n        <br />\n        <>Feels like: {weather.main.feels_like}</>\n        <br />\n        <>{weather.weather[0].main} </>\n        <br />\n        <>\n          <Button text={\"Refresh\"} className=\"refreshBtn\" />\n        </>\n      </>\n    );\n  }\n}\n\nexport default Interface;\n\n//Map over API URL and spit out HTML\n//Make components\n//Add button that sorts weather\n//HW to include:\n// - Components\n// - Props\n// - State\n// - Life cycles\n// // - Event handling\n// Components: In React, components are modular, reusable building blocks that encapsulate a part of the user interface and its behavior.\n\n// Props: Props (short for properties) are used to pass data from a parent component to a child component in React, allowing communication between them.\n\n// State: State is a mechanism in React components that allows them to manage and maintain their own data, ensuring that the UI reflects the current application state.\n\n// Life Cycles: Component lifecycle methods in React provide hooks at various stages, such as mounting, updating, and unmounting, allowing developers to execute code at specific points in a component's existence.\n\n// Event Handling: In React, event handling involves capturing and responding to user interactions (e.g., clicks, input changes) within the components to trigger specific actions or updates in the application.\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,SAAS,SAASN,SAAS,CAAC;EAChC;EACAO,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEC;IAAQ,CAAC,GAAG,IAAI,CAACC,KAAK;IAC9BC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,KAAK,CAAC;IACvB,oBACEJ,OAAA,CAAAF,SAAA;MAAAS,QAAA,gBACEP,OAAA,CAAAF,SAAA;QAAAS,QAAA,GAAE,YAAU,EAACJ,OAAO,CAACK,IAAI;MAAA,eAAG,CAAC,eAC7BR,OAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNZ,OAAA,CAAAF,SAAA;QAAAS,QAAA,GAAE,eAAa,EAACJ,OAAO,CAACU,IAAI,CAACC,IAAI;MAAA,eAAG,CAAC,eACrCd,OAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNZ,OAAA,CAAAF,SAAA;QAAAS,QAAA,GAAE,cAAY,EAACJ,OAAO,CAACU,IAAI,CAACE,UAAU;MAAA,eAAG,CAAC,eAC1Cf,OAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNZ,OAAA,CAAAF,SAAA;QAAAS,QAAA,GAAGJ,OAAO,CAACA,OAAO,CAAC,CAAC,CAAC,CAACU,IAAI,EAAC,GAAC;MAAA,eAAE,CAAC,eAC/Bb,OAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNZ,OAAA,CAAAF,SAAA;QAAAS,QAAA,eACEP,OAAA,CAACJ,MAAM;UAACoB,IAAI,EAAE,SAAU;UAACC,SAAS,EAAC;QAAY;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,gBAClD,CAAC;IAAA,eACH,CAAC;EAEP;AACF;AAEA,eAAeX,SAAS;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
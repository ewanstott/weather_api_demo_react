{"ast":null,"code":"var _jsxFileName = \"/Users/ewstott/Documents/Github_Local/weather_api_demo_react/src/App.js\";\nimport React, { Component } from \"react\";\nimport Spinner from \"./components/Spinner\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport Interface from \"./components/Interface\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\n\n//WRITE THIS OUT AGAIN\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n    // Function to fetch weather data\n    this.getWeatherData = async city => {\n      try {\n        const {\n          data\n        } = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=adef24c0d24a95065818997a98ddd457\n        `);\n        console.log(data);\n        this.setState({\n          weather: data\n        }); //store weather data in state above ^^\n      } catch (error) {\n        console.log(error);\n      }\n    };\n  }\n  // invoked immediately after a component is inserted into the DOM, making it suitable for performing actions such as data fetching or setting up subscriptions.\n  // async componentDidMount() {\n  //   try {\n  //     const { data } = await axios.get(\n  //       `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=adef24c0d24a95065818997a98ddd457\n  //       `\n  //     );\n\n  //     this.setState({ weather: data }); //store weather data in state above ^^\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // }\n\n  render() {\n    console.log(this.state);\n    //If there is weather (truthy), show weather, Otherwise, show spinner.\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), this.state.weather || this.state.weather === undefined ? /*#__PURE__*/_jsxDEV(Interface, {\n        weather: this.state.weather,\n        getWeatherData: this.getWeatherData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\nexport default App;\n\n//Notes\n// this.state refers to the internal state of a component, while this.props refers to the properties passed to a component. When you set the state using this.setState({...}), you're updating the internal state of the component.\n// When you pass data from a parent component to a child component, you use props. In React, props are a way to pass data from a parent component to a child component. When you pass data as a prop, it becomes accessible in the child component through this.props. It doesn't directly affect the state of the child component; instead, it provides a way for the child component to receive and use external data.\n// So, this.state is used to manage internal component state, and this.props is used to receive data passed down from a parent component. If you pass data from the state of a parent component to a child component, it will typically be done through props.\n\n//   `https://api.openweathermap.org/data/2.5/weather?q=Vancouver,Canada&appid=adef24c0d24a95065818997a98ddd457\n// `","map":{"version":3,"names":["React","Component","Spinner","axios","Interface","Header","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","App","constructor","args","state","getWeatherData","city","data","get","console","log","setState","weather","error","render","children","fileName","_jsxFileName","lineNumber","columnNumber","undefined"],"sources":["/Users/ewstott/Documents/Github_Local/weather_api_demo_react/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Spinner from \"./components/Spinner\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport Interface from \"./components/Interface\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\n\n//WRITE THIS OUT AGAIN\n\nclass App extends Component {\n  state = {};\n\n  // Function to fetch weather data\n  getWeatherData = async (city) => {\n    try {\n      const { data } = await axios.get(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=adef24c0d24a95065818997a98ddd457\n        `\n      );\n      console.log(data);\n      this.setState({ weather: data }); //store weather data in state above ^^\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // invoked immediately after a component is inserted into the DOM, making it suitable for performing actions such as data fetching or setting up subscriptions.\n  // async componentDidMount() {\n  //   try {\n  //     const { data } = await axios.get(\n  //       `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=adef24c0d24a95065818997a98ddd457\n  //       `\n  //     );\n\n  //     this.setState({ weather: data }); //store weather data in state above ^^\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // }\n\n  render() {\n    console.log(this.state);\n    //If there is weather (truthy), show weather, Otherwise, show spinner.\n    return (\n      <>\n        <Header />\n        {this.state.weather || this.state.weather === undefined ? (\n          <Interface\n            weather={this.state.weather}\n            getWeatherData={this.getWeatherData}\n          />\n        ) : (\n          <Spinner />\n        )}\n        <Footer />\n      </>\n    );\n  }\n}\n\nexport default App;\n\n//Notes\n// this.state refers to the internal state of a component, while this.props refers to the properties passed to a component. When you set the state using this.setState({...}), you're updating the internal state of the component.\n// When you pass data from a parent component to a child component, you use props. In React, props are a way to pass data from a parent component to a child component. When you pass data as a prop, it becomes accessible in the child component through this.props. It doesn't directly affect the state of the child component; instead, it provides a way for the child component to receive and use external data.\n// So, this.state is used to manage internal component state, and this.props is used to receive data passed down from a parent component. If you pass data from the state of a parent component to a child component, it will typically be done through props.\n\n//   `https://api.openweathermap.org/data/2.5/weather?q=Vancouver,Canada&appid=adef24c0d24a95065818997a98ddd457\n// `\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAO,kCAAkC;AACzC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;;AAExC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,GAAG,SAASV,SAAS,CAAC;EAAAW,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAC1BC,KAAK,GAAG,CAAC,CAAC;IAEV;IAAA,KACAC,cAAc,GAAG,MAAOC,IAAI,IAAK;MAC/B,IAAI;QACF,MAAM;UAAEC;QAAK,CAAC,GAAG,MAAMd,KAAK,CAACe,GAAG,CAC7B,qDAAoDF,IAAK;AAClE,SACM,CAAC;QACDG,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;QACjB,IAAI,CAACI,QAAQ,CAAC;UAAEC,OAAO,EAAEL;QAAK,CAAC,CAAC,CAAC,CAAC;MACpC,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;MACpB;IACF,CAAC;EAAA;EAED;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEAC,MAAMA,CAAA,EAAG;IACPL,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,KAAK,CAAC;IACvB;IACA,oBACEN,OAAA,CAAAE,SAAA;MAAAe,QAAA,gBACEjB,OAAA,CAACH,MAAM;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACT,IAAI,CAACf,KAAK,CAACQ,OAAO,IAAI,IAAI,CAACR,KAAK,CAACQ,OAAO,KAAKQ,SAAS,gBACrDtB,OAAA,CAACJ,SAAS;QACRkB,OAAO,EAAE,IAAI,CAACR,KAAK,CAACQ,OAAQ;QAC5BP,cAAc,EAAE,IAAI,CAACA;MAAe;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,gBAEFrB,OAAA,CAACN,OAAO;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CACX,eACDrB,OAAA,CAACF,MAAM;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eACV,CAAC;EAEP;AACF;AAEA,eAAelB,GAAG;;AAElB;AACA;AACA;AACA;;AAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
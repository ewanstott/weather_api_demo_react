{"ast":null,"code":"var _jsxFileName = \"/Users/ewstott/Documents/Github_Local/weather_api_demo_react/src/components/Interface.jsx\";\nimport React, { Component } from \"react\";\nimport Button from \"./Button\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass Interface extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      city: \"\",\n      weather: null\n    };\n    this.onInput = e => {\n      this.setState({\n        city: e.target.value\n      });\n      console.log(e.target.value);\n    };\n    this.onGetWeatherClick = async () => {\n      try {\n        // Call the function passed from the parent component and await the result\n        await this.props.getWeatherData(this.state.city);\n\n        // Access the updated weather data from the parent component's state\n        const {\n          weather\n        } = this.props;\n        console.log(weather);\n\n        // Update the local state with the new weather data\n        this.setState({\n          weather\n        });\n      } catch (error) {\n        console.error(\"Error in onGetWeatherClick\", error);\n      }\n    };\n  }\n  render() {\n    const {\n      weather\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter city name\",\n        value: this.state.city,\n        onChange: this.onInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onGetWeatherClick,\n        children: \"Get Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: weather && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Location: \", weather.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Temperature: \", weather.main.temp]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Feels like: \", weather.main.feels_like]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Description: \", weather.weather[0].main]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Interface;","map":{"version":3,"names":["React","Component","Button","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Interface","constructor","args","state","city","weather","onInput","e","setState","target","value","console","log","onGetWeatherClick","props","getWeatherData","error","render","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","name","main","temp","feels_like"],"sources":["/Users/ewstott/Documents/Github_Local/weather_api_demo_react/src/components/Interface.jsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport Button from \"./Button\";\nimport axios from \"axios\";\n\nclass Interface extends Component {\n  state = { city: \"\", weather: null };\n\n  onInput = (e) => {\n    this.setState({ city: e.target.value });\n    console.log(e.target.value);\n  };\n\n  onGetWeatherClick = async () => {\n    try {\n      // Call the function passed from the parent component and await the result\n      await this.props.getWeatherData(this.state.city);\n\n      // Access the updated weather data from the parent component's state\n      const { weather } = this.props;\n      console.log(weather);\n\n      // Update the local state with the new weather data\n      this.setState({ weather });\n    } catch (error) {\n      console.error(\"Error in onGetWeatherClick\", error);\n    }\n  };\n\n  render() {\n    const { weather } = this.state;\n\n    return (\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Enter city name\"\n          value={this.state.city}\n          onChange={this.onInput}\n        />\n        <button onClick={this.onGetWeatherClick}>Get Weather</button>\n        <>\n          {weather && (\n            <div className=\"card\">\n              <h2>Location: {weather.name}</h2>\n              <p>Temperature: {weather.main.temp}</p>\n              <p>Feels like: {weather.main.feels_like}</p>\n              <p>Description: {weather.weather[0].main}</p>\n              {/* <Button text={\"Refresh\"} className=\"refreshBtn\" /> */}\n            </div>\n          )}\n        </>\n      </div>\n    );\n  }\n}\n\nexport default Interface;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/ewstott/Documents/Github_Local/weather_api_demo_react/src/App.js\";\nimport React, { Component } from \"react\";\nimport Spinner from \"./components/Spinner\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport Interface from \"./components/Interface\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\n\n//WRITE THIS OUT AGAIN\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n  // invoked immediately after a component is inserted into the DOM, making it suitable for performing actions such as data fetching or setting up subscriptions.\n  async componentDidMount() {\n    const {\n      data\n    } = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=Vancouver,Canada&appid=adef24c0d24a95065818997a98ddd457\n      `);\n\n    //Use forecast URL\n    //https://api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}&appid={API key}\n\n    this.setState({\n      weather: data\n    });\n  }\n  render() {\n    console.log(this.state);\n    //If there is weather (truthy), show weather, Otherwise, show spinner.\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), this.state.weather ? /*#__PURE__*/_jsxDEV(Interface, {\n        weather: this.state.weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Spinner","axios","Interface","Header","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","App","constructor","args","state","componentDidMount","data","get","setState","weather","render","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/ewstott/Documents/Github_Local/weather_api_demo_react/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Spinner from \"./components/Spinner\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport Interface from \"./components/Interface\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\n\n//WRITE THIS OUT AGAIN\n\nclass App extends Component {\n  state = {};\n\n  // invoked immediately after a component is inserted into the DOM, making it suitable for performing actions such as data fetching or setting up subscriptions.\n  async componentDidMount() {\n    const { data } = await axios.get(\n      `https://api.openweathermap.org/data/2.5/weather?q=Vancouver,Canada&appid=adef24c0d24a95065818997a98ddd457\n      `\n    );\n\n    //Use forecast URL\n    //https://api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}&appid={API key}\n\n    this.setState({ weather: data });\n  }\n\n  render() {\n    console.log(this.state);\n    //If there is weather (truthy), show weather, Otherwise, show spinner.\n    return (\n      <>\n        <Header />\n        {this.state.weather ? (\n          <Interface weather={this.state.weather} />\n        ) : (\n          <Spinner />\n        )}\n        <Footer />\n      </>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAO,kCAAkC;AACzC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;;AAExC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,GAAG,SAASV,SAAS,CAAC;EAAAW,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAC1BC,KAAK,GAAG,CAAC,CAAC;EAAA;EAEV;EACA,MAAMC,iBAAiBA,CAAA,EAAG;IACxB,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMb,KAAK,CAACc,GAAG,CAC7B;AACP,OACI,CAAC;;IAED;IACA;;IAEA,IAAI,CAACC,QAAQ,CAAC;MAAEC,OAAO,EAAEH;IAAK,CAAC,CAAC;EAClC;EAEAI,MAAMA,CAAA,EAAG;IACPC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,KAAK,CAAC;IACvB;IACA,oBACEN,OAAA,CAAAE,SAAA;MAAAa,QAAA,gBACEf,OAAA,CAACH,MAAM;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACT,IAAI,CAACb,KAAK,CAACK,OAAO,gBACjBX,OAAA,CAACJ,SAAS;QAACe,OAAO,EAAE,IAAI,CAACL,KAAK,CAACK;MAAQ;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAE1CnB,OAAA,CAACN,OAAO;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CACX,eACDnB,OAAA,CAACF,MAAM;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eACV,CAAC;EAEP;AACF;AAEA,eAAehB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}